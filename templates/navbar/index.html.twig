<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="{{ home_page.route_name ? path(home_page.route_name) : '#' }}">{{ home_page.title }}</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
        {% for item in navbar_links %}
        	{# "set" declaring new variable, that is here class named "active" bind to current page #}
            {% set activeClass = item.route_name == current_route_name ? 'active' : '' %}
            {% set hasChildren = item.children is defined and item.children|length > 0 %}
            <li class="nav-item {{ activeClass }}"
            	{% if hasChildren %}
            	onmouseover="$(this).find('ul').show();"
            	onmouseleave="$(this).find('ul').hide();"
            	{% endif %}
            >
            	{% set link = item.route_name ? path(item.route_name) : '#' %}
                <a class="nav-link" href="{{ link }}">
                	{{ item.title }}
                	{% if activeClass %}
                    <span class="sr-only">(current)</span>
                    {% endif %}
                </a>
                {# display child links if exist #}
                {% if hasChildren %}
                <ul class="navbar-nav mr-auto" style="display: none; position: absolute; background: #ff0000;">
                {% for child in item.children %}
                    {% set activeClass = child.route_name == current_route_name ? 'active' : '' %}
                	<li class="nav-item {{ activeClass }}">
                    	{% set sublink = child.route_name ? path(child.route_name) : '#' %}
                        <a class="nav-link" href="{{ sublink }}">
                        	{{ child.title }}
                        	{% if activeClass %}
                            <span class="sr-only">(current)</span>
                            {% endif %}
                        </a>
                	</li>
                {% endfor %}
                </ul>
                {% endif %}
            </li>
        {% endfor %}
        </ul>
        
		{#
			Ici, on vérifie que l'utilisateur est juste authentifié ou non, quelque soit son role, ce n'est pas important à cet endroit de savoir le type de l'utilisateur (Staff ou Member), ni son role.
			On peut utiliser la valeur 'IS_AUTHENTICATED_REMEMBERED' qui correspond au statut "utilisateur connecté et session active", y compris les sessions anonymes (comme par exemple faire un panier d'achat sur un e-commerce, sans avoir encore créé de compte sur le site marchand).
			Le statut : 'IS_AUTHENTICATED_FULLY' qu'on utilise plutôt pour des pages du type "checkout/cart" où l'on arrive à une page où l'on créé enfin réellement son compte sur le site marchand pour valider le panier et procéder au paiement et aux modalités de livraison.
			Par précaution, on va utiliser 'IS_AUTHENTICATED_FULLY' car à priori, on n'autorise pas les connexions anonymes mais si on utilise 'IS_AUTHENTICATED_REMEMBERED', ça marche aussi
			(du coup, je ne sais pas trop si c'est pas mieux d'utiliser 'IS_AUTHENTICATED_REMEMBERED')
		#}
		{% if is_granted('IS_AUTHENTICATED_FULLY') %}
			{#
    			Etant donné que les listes et la consultation des ouvrages n'est accessibles qu'aux personnes connectées (l'accès n'est pas public),
    			le formulaire de recherche sur titre du média (search box) ne peut pas non plus être accessible publiquement
			#}
		
			{# La search box : présente sur toutes les pages des utilisateurs authentifiés, celle-ci se présente sous la forme d'un formulaire qui sera soumis au controller Search #}
            <form method="GET" class="form-inline my-2 my-lg-0" action="{{ path('search') }}" style="margin-right: 2em;">
                <input class="form-control mr-sm-2" type="search" placeholder="Rechercher..." aria-label="Search" name="query">
                <button class="btn btn-outline-success my-2 my-sm-0" type="submit">OK</button>
            </form>

			{# Identité de la personne connectée #}
			<div id="user-profile">
				<div class="user-profile username">
					Profile :
					{%  set edit_path = 'ROLE_USER' in app.user.roles ? path('member_edit', {'id': app.user.id}) : path('staff_edit', {'id': app.user.id}) %}
					<a href="{{ edit_path }}">
						{{ app.user.username }}
					</a>
				</div>
				
				{% if is_granted('ROLE_ADMIN') %}
				{# on affiche ce cadre uniquement pour les Staff, sachant qu'un Staff par défaut est un admin et pas pour les Member (qui sont des ROLE_USER uniquement) #}
				<div class="user-profile role">
					<strong>Rôle(s) :</strong> {{ app.user.roles|join(', ') }}
				</div>
				{% endif %}
			</div>
			
            {# Lien vers page de déconnexion #}
            <a href="{{ path('logout') }}" class="btn btn-outline-danger my-2 my-sm-0 ml-3">Déconnexion</a>
		{% else %}
            {# Lien vers page de connexion #}
            <a href="{{ path('login_index') }}" class="btn btn-outline-primary my-2 my-sm-0" type="submit">Connexion</a>
		{% endif %}
    </div>
</nav>